# Generated by Django 3.0.5 on 2020-05-11 15:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parents', '0001_initial'),
        ('setup', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_id', models.CharField(blank=True, editable=False, max_length=1024, unique=True, verbose_name='Student ID')),
                ('student_phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='Student Phone')),
                ('date_of_joining', models.DateField(blank=True, null=True, verbose_name='Date Joined')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Physical Address')),
                ('student_profile_summary', models.TextField(blank=True, null=True, verbose_name='Student Profile Summary')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Profile Image')),
                ('spouse_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Spouse Name')),
                ('spouse_email', models.EmailField(blank=True, max_length=500, null=True, verbose_name='Spouse Email')),
                ('spouse_phone', models.CharField(blank=True, max_length=12, null=True, verbose_name='Spouse Phone')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
                ('stu_id', models.CharField(blank=True, max_length=500, null=True, verbose_name='Student ID')),
                ('stu_admission_date', models.DateTimeField(auto_now_add=True, verbose_name='Student Admission')),
                ('stu_nxt_of_kin_firstname', models.CharField(blank=True, max_length=500, null=True, verbose_name='Next of Kin First Name')),
                ('stu_nxt_of_kin_lastname', models.CharField(blank=True, max_length=500, null=True, verbose_name='Next of Kin Last Name')),
                ('stu_nxt_of_kin_phone', models.CharField(blank=True, max_length=500, null=True, verbose_name='Next of Kin Phone')),
                ('stu_nxt_of_kin_email', models.EmailField(blank=True, max_length=500, null=True, verbose_name='Next of Kin Email')),
                ('stu_nxt_of_kin_work_address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Next of Kin Work Address')),
                ('stu_nxt_of_kin_home_address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Next of Kin Home Address')),
                ('stu_on_medication', models.BooleanField(default=True, verbose_name='Student on Medication')),
                ('stu_medical_aid_number', models.CharField(blank=True, max_length=500, null=True, verbose_name='Medical Aid Number')),
                ('stu_medical_aid_phone', models.CharField(blank=True, max_length=500, null=True, verbose_name='Medical Aid Phone')),
                ('stu_medical_aid_is_primary_member', models.BooleanField(default=True, verbose_name='Primary Member')),
                ('stu_previous_school_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Previous School Name')),
                ('stu_previous_school_phone', models.CharField(blank=True, max_length=500, null=True, verbose_name='Previous School Phone')),
                ('stu_previous_school_email', models.EmailField(blank=True, max_length=500, null=True, verbose_name='Previous School Email')),
                ('stu_previous_school_address', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Previous School Address')),
                ('stu_is_leaving_with_this_parent', models.BooleanField(default=True, verbose_name='Student Leaves with Parent')),
                ('parent_is_accountable', models.BooleanField(default=True, verbose_name='Parent is Accountable')),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Designation', verbose_name='Designation')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Gender', verbose_name='Gender')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Language', verbose_name='Home Language')),
                ('marital_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Marital_Status', verbose_name='Marital Status')),
                ('modified_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_modified_by', to=settings.AUTH_USER_MODEL, verbose_name='Modified By')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Nationality', verbose_name='Nationality')),
                ('qualification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Qualification', verbose_name='Highest Qualification')),
                ('religion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Religion', verbose_name='Religion')),
                ('stu_allergies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Allergies', verbose_name='Allergies')),
                ('stu_chronic_disease', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Chronic_Diseases', verbose_name='Chronic Diseases')),
                ('stu_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Classes', verbose_name='Student Class')),
                ('stu_ethnic_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Ethnics', verbose_name='Ethnics')),
                ('stu_family_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Family_Status', verbose_name='Family Status')),
                ('stu_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.GradeLevel', verbose_name='Student Grade')),
                ('stu_id_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.ID_Types', verbose_name='ID Types')),
                ('stu_main_parent_guardian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='main_parent', to='parents.Parents', verbose_name='Main Parent/Guardian')),
                ('stu_main_parent_guardian_relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parent_relationship', to='setup.Main_Relationships', verbose_name='Relationship to Student')),
                ('stu_main_parent_guardian_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Parent_Types', verbose_name='Parent Type')),
                ('stu_medical_aid_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Medical_Aid', verbose_name='Medical Aid Name')),
                ('stu_nxt_of_kin_relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='next_of_kin_relationship', to='setup.Main_Relationships', verbose_name='Relationships')),
                ('stu_parents_deseased', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Parent_Deceased', verbose_name='Parent deceased')),
                ('stu_pre_primary_education', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Education_Types', verbose_name='Student Pre-Primary Education Type')),
                ('stu_preferred_communication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Communication_Methods', verbose_name='Preferred Communication Method')),
                ('stu_preferred_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Language_Preferences', verbose_name='Language Preference')),
                ('stu_previous_school_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Countries', verbose_name='Previous School Country')),
                ('stu_previous_school_highest_grade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Highest_Grade', verbose_name='Previous School Highest Grade')),
                ('stu_previous_school_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Provinces', verbose_name='Previous School Province')),
                ('stu_previous_school_reason_for_leaving', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Reasons_For_Leaving', verbose_name='Previous School Reason for Leaving')),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='setup.Title', verbose_name='Title')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Profile',
                'verbose_name_plural': 'Student Profiles',
                'ordering': ('s_id',),
            },
        ),
    ]
